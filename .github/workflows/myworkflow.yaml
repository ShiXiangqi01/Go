name: Test Workflow

on:
  push:
    branches:
      - master

jobs:
  my_first_job:
    name: Scan for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Vulnerability Scan with Trivy
        id: trivy_scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'  # Corrected to 'fs' for filesystem scanning
          ignore-unfixed: true
          format: 'table'
          fail-on: 'CRITICAL'
          severity: 'CRITICAL'
          output: 'trivy-results.txt'

  my_second_job:
    name: Handle Failure
    needs: my_first_job
    if: ${{ failure() }}  # Correct conditional to capture failure from the first job
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: trivy-results

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          payload: |
            {
              "text": "Scan failed - Critical vulnerabilities found!",
              "attachments": [
                {
                  "title": "Failed trivy scan, see uploaded report",
                  "color": "#FF0000",
                  "fields": [
                    {
                      "title": "Total High/Critical Issues",
                      "value": "4 HIGH, 0 CRITICAL",
                      "short": true
                    }
                  ],
                  "footer": "CI/CD Pipeline | Scan Report"
                }
              ]
            }

      - name: Upload file to Slack
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: trivy-results.txt
          initial_comment: 'Post by slack-upload-file'

  my_third_job:
    name: Success Workflow
    needs: my_first_job
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3  # Correct the version if v5 is intended
        with:
          context: .
          push: true
          tags: shixiangqi/workshop-image:${{ github.sha }}

      - name: Sign Docker image with Cosign
        run: cosign sign --key ${{ secrets.COSIGN_PRIVATE_KEY }} shixiangqi/workshop-image:${{ github.sha }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Notify Slack on Success
        uses: slackapi/slack-github-action@v1.14.0
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          payload: |
            {
              "text": "CICD Pipeline Execution Report",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Build and Deployment Success",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Name:*\nFred"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Matriculation:*\nabc123"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Email:*\nfred@gmail.com"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Git Repository:*\n<https://github.com/ShiX
